#!/bin/bash
set -e  # Exit on error

#--- It avoids that numpy takes more than one core ------------
export OPENBLAS_NUM_THREADS=1
export MKL_NUM_THREADS=1
#------------------------------------------------


#-------------- Global variables -----------------------------------------
GLOBALS=$1
if [ ! -f $GLOBALS ]
	then
		echo "Input file does not exists!"
		echo "You must provide a valid global variables file"
		exit
fi

TNP="$(grep -m 1 size $GLOBALS | awk '{print $3}')"
PATH_OUT="$(grep -m 1 dir_main $GLOBALS | awk '{print $3}' | tr -d '"')"
PATH_SKM="$(grep -m 1 dir_sakam $GLOBALS | awk '{print $3}' | tr -d '"')"
STATICS=$PATH_SKM"/statics.py"
PKL="$PATH_OUT$(grep -m 1 -wr '\bname_globals\b' $GLOBALS | awk '{print $3}' | tr -d '"')"
LOG_OUT=${PATH_OUT}"/log_out"
LOG_ERR=${PATH_OUT}"/log_error"
#------------------------------------------------------------------

python $GLOBALS
python $STATICS $PKL

#------- Pre processing -----------------------
echo "Preprocessing catalogue ..."
python $PATH_SKM/preprocess.py $PKL >> $LOG_OUT 2>> $LOG_ERR
#----------------------------------------------

#----- Split catalogue -------------------------------------
echo "Splitting catalogue ..."
python $PATH_SKM/split.py $PKL >> $LOG_OUT 2>> $LOG_ERR
#-----------------------------------------------------------

#---------------- Launch parts --------------------------
for PRC in $(eval echo "{1..$TNP}")
do
	echo "Launching part $PRC of $TNP"
	sed s/XXX/$PRC/g $PATH_SKM/fit.py > tmp.py
	python tmp.py $PKL >> $LOG_OUT 2>> $LOG_ERR &
	sleep 30
	rm tmp.py
done
#-------------------------------------------------------

echo "Waiting for all processes to finish ..."
wait

#--------- Unify outputs ------------------------------
python $PATH_SKM/unify.py $PKL >> $LOG_OUT 2>> $LOG_ERR
#------------------------------------------------------